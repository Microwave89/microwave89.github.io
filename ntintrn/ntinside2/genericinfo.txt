Q: Why doesn't the Win32 API "SignalObjectAndWait()" simply invoke "NtSignalAndWaitForObject" but instead calls "RtlActivateActivationContextUnsafeFast" before performing the wait operation? 

A: It has to do with the "alertable" parameter of the SignalObjectAndWait() API. The parameter controls whether the wait can be canceled prematurely by a user APC. The activation of the activation context by RtlXxx call above ensures that the APC routine is executed within the desired SxS environment. The SxS environment provides proper(desired?) versions of the COM assemblies and C/C++ runtime and thus makes sure the APC routine may also leverage COM functionality. The prior call to RtlActivateActivationContext(UnsafeFast) is same for any API which either accepts the "alertable" parameter, that is e.g. all WaitForXxxEx calls, or results in eventual execution of an APC routine.